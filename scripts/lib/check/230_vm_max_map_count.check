#!/bin/bash

function check_230_vm_max_map_count {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r _sapnote='#1980196'		#Setting /proc/sys/vm/max_map_count on HANA systems
    # MODIFICATION SECTION<<

    # LIMIT <= 2.147.483.647 - but make sure that value is not larger
    # Intel ( 1.000.000 + (32768 * RAM in GB))
    # Power ( 1.000.000 + (16384 * RAM in GB))
    # For the sake of simplicity, you can also set the parameter to the maximum possible value of 2147483647 (231-1), instead of using above formulas.
    local -i factor=32768
    LIB_FUNC_IS_IBMPOWER && factor=16384

    local -ir _set_mmcount=$(( 1000000 + (factor * LIB_PLATF_RAM_MiB_PHYS / 1024) ))
    local -ir _maximum_mmcount=2147483647

    # https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic
    local -i _limit_mmcount=$(( _set_mmcount > _maximum_mmcount ? _maximum_mmcount : _set_mmcount ))

    local -ir _curr_mmcount=$(</proc/sys/vm/max_map_count)

    if [[ ${_curr_mmcount} -lt ${_limit_mmcount} ]]; then

        logCheckError "Parameter vm.max_map_count must be increased (SAP Note ${_sapnote:-}) (is: ${_curr_mmcount}, should be: ${_limit_mmcount}, could be: ${_maximum_mmcount})"
        _retval=2

    else

        if [[ ${_curr_mmcount} -lt ${_maximum_mmcount} ]]; then
            logCheckOk "Parameter vm.max_map_count set as recommended, but could be increased (SAP Note ${_sapnote:-}) (is: ${_curr_mmcount}, could be: ${_maximum_mmcount})"
        else
            logCheckOk "Parameter vm.max_map_count set to maximum as recommended (SAP Note ${_sapnote:-}) (is: ${_curr_mmcount})"
        fi
        _retval=0

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
