#!/usr/bin/env bash

function check_0441_saptune_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server%20for%20SAP%20Applications&version=12.5&arch=x86_64&query=saptune
    # https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server%20for%20SAP%20Applications&version=15.5&arch=x86_64&query=saptune

    # MODIFICATION SECTION>>
    local -r sapnote='#1275776'         #1275776 - Linux: Preparing SLES for SAP environments

    local -r sles125='3.1.3'
    local -r sles15x='3.1.3'
    # MODIFICATION SECTION<<

    local _goodversion

    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES ; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif ! rpm -q --quiet saptune ; then

        logCheckSkipped 'saptune not installed' "(SAP Note ${sapnote:-}). Skipping <${FUNCNAME[0]}>"
        _retval=3

    else

        case "${OS_VERSION}" in

            12.5 )      : "${sles125}" ;;
            15.*     )  : "${sles15x}" ;;

            *)
                    logCheckWarning 'Check does not support SLES release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                    _retval=1
                ;;
        esac

        _goodversion="$_"

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local _fullversion
        local normalized_goodversion
        local normalized_fullversion

        local _is_used=false

        _fullversion=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" saptune)

        #normalize full version - e.g. 4.1.10-33.5.2
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        if [[ ! "${normalized_fullversion}" =~ (1|2) ]]; then

            if systemctl is-enabled "saptune" --quiet; then
                logCheckInfo 'saptune is installed and enabled'
                _is_used=true
            else
                logCheckInfo 'saptune is installed but not enabled - sapconf in use?'
            fi

            if systemctl is-active "saptune" --quiet; then
                logCheckInfo 'saptune is installed and active'
                _is_used=true
            else
                logCheckInfo 'saptune is installed but not active - sapconf in use?'
            fi

        else

            if grep -qs saptune /etc/tuned/active_profile; then
                _is_used=true
            fi

        fi

        # returns 0 if equal, 1 if first is higher, 2 if second is higher
        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"

        if [[ $? -ne 2 ]]; then

            logCheckOk 'saptune version seems to be ok' "(SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0

        elif ${_is_used}; then

            logCheckError 'saptune must be updated' "(SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2

        else

            logCheckWarning 'saptune should be updated in case of future usage' "(SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=1
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
