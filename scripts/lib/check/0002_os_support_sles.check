#!/usr/bin/env bash

function check_0002_os_support_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    # array             'support general end'   'ESPOS end'     'LTSS end'
    local -ar _sles_11=(\
                        '11.3' '31 Jan 2016'    '31 Jan 2017'   '30 Jan 2019'   \
                        '11.4' '31 Mar 2019'    '31 Mar 2019'   '31 Mar 2022'   \
                        )

    local -ar _sles_12=(\
                        '12.0' '30 Jun 2016'    '31 Aug 2019'   '31 Aug 2019'   \
                        '12.1' '31 May 2017'    '31 May 2020'   '31 May 2020'   \
                        '12.2' '31 Mar 2018'    '31 Mar 2021'   '31 Mar 2021'   \
                        '12.3' '30 Jun 2019'    '30 Jun 2022'   '30 Jun 2022'   \
                        '12.4' '30 Jun 2020'    '30 Jun 2023'   '30 Jun 2023'   \
                        '12.5' '31 Oct 2024'    '31 Oct 2024'   '31 Oct 2027'   \
                        )

    local -ar _sles_15=(\
                        '15.0' '31 Dec 2019'    '31 Dec 2022'   '31 Dec 2022'   \
                        '15.1' '31 Dec 2020'    '31 Dec 2023'   '31 Dec 2023'   \
                        )
    # MODIFICATION SECTION<<

    local -r sapnote='#936887'  #End of maintenance for Linux distributions
    local -a _sles_all


    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    else

        case "${OS_VERSION}" in

        11.[1-3] )
                logCheckError "SLES version has reached its end of lifetime by SUSE and must be upgraded (SAP Note ${sapnote:-}) (is: ${OS_VERSION})"
                _retval=2
                ;;

        11.4 )      _sles_all+=("${_sles_11[@]}") ;;

        12.[0-5]*)  _sles_all+=("${_sles_12[@]}") ;;

        15.[0-1] )  _sles_all+=("${_sles_15[@]}") ;;

        *)
            logCheckError "SLES version is not supported by SAP HANA (SAP Note #2235581) (is: ${OS_VERSION})"
            _retval=2
            ;;
        esac

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local _sles_release
        local _end_support_date
        local _end_ltss_date

        local _sles_type
        local _support_type
        local _support_type_short

        # i+=4 --> every 4th item
        for ((i=0; i < ${#_sles_all[@]}; i+=4)); do

            logTrace "<${FUNCNAME[0]}> # ${_sles_all[$i]}>"

            _sles_release="${_sles_all[$i]}"

            [[ "${OS_VERSION}" != "${_sles_release}"* ]] && continue    #handle kernel with subversions correctly

            if ! LIB_FUNC_IS_SLES4SAP; then

                _sles_type='SLES'
                _support_type='general support'
                _support_type_short='GS'
                _end_support_date="${_sles_all[$i+1]}"                  #GSE in case of SLES

            else

                _sles_type='SLES4SAP'
                _support_type='Extended SPO support'
                _support_type_short='ESPOS'
                _end_support_date="${_sles_all[$i+2]}"                  #ESPOS in case of SLES4SAP

            fi

            _end_ltss_date="${_sles_all[$i+3]}"

            local _ltss_active=false
            [[ -f '/etc/products.d/SLES-LTSS.prod' ]] && _ltss_active=true

            local ft_today
            local ft_end_support
            local ft_end_ltss_date

            ft_today=$(date +"%Y%m%d")                                  # = 20200331
            ft_end_ltss_date=$(date -d "${_end_ltss_date}" +"%Y%m%d")   # = 20201131
            ft_end_support=$(date -d "${_end_support_date}" +"%Y%m%d")  # = 20191101

            if [[ ${ft_today} -ge ${ft_end_ltss_date:-} ]] ; then

                logCheckError "${_sles_type} version has reached its end of lifetime by SUSE and must be upgraded (SAP Note ${sapnote:-}) (is: ${OS_VERSION}, LTSS end: ${_end_ltss_date})"
                _retval=2

            elif ${_ltss_active}; then

                logCheckOk "${_sles_type} version is in LTSS support by SUSE (SAP Note ${sapnote:-}) (is: ${OS_VERSION}, LTSS end: ${_end_ltss_date})"
                _retval=0

            elif [[ ${ft_today} -ge ${ft_end_support:-} ]] ; then

                logCheckWarning "${_sles_type} version has reached SUSE's ${_support_type} end and should be upgraded (SAP Note ${sapnote:-}) (is: ${OS_VERSION}, ${_support_type_short} end: ${_end_support_date})"
                _retval=1

            else

                logCheckOk "${_sles_type} version is in ${_support_type} by SUSE (SAP Note ${sapnote:-}) (is: ${OS_VERSION}, ${_support_type_short} end: ${_end_support_date}, LTSS end: ${_end_ltss_date})"
                _retval=0
            fi

            break

        done
    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
