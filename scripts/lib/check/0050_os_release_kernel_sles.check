#!/usr/bin/env bash

function check_0050_os_release_kernel_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # Linux kernel should match release
    # https://www.suse.com/support/kb/doc/?id=000019587

    # MODIFICATION SECTION>>
    # array                              rel    lower boundary          upper boundary
    local -ar _rel_kernel_matrix=(\
                                        '12.5'  '4.12.14-120.1'         '4.12.14-999'       \
                                        '12.4'  '4.12.14-94.41.1'       '4.12.14-95.999'    \

                                        '15.4'  '5.14.21-150400.22.1'   '5.14.21-150400.999'        \
                                        '15.3'  '5.3.18-57.3'           '5.3.18-150300.999'        \
                                        '15.2'  '5.3.18-22.2'           '5.3.18-150200.999'        \
                                        '15.1'  '4.12.14-195.1'         '4.12.14-150100.197.999'   \
                        )

    local -r sapnote='#2235581'
    # MODIFICATION SECTION<<

    #2235581- SAP HANA: Supported Operating Systems

    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES ; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    fi

    #CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local release
        local kernelversion
        local kernel_low
        local kernel_high

        local _handled=false

        LIB_FUNC_NORMALIZE_KERNEL "${OS_LEVEL}"
        kernelversion="${LIB_FUNC_NORMALIZE_KERNEL_RETURN}"

        # i+=3 --> every 3rd item
        for ((i=0; i < ${#_rel_kernel_matrix[@]}; i+=3)); do

            release="${_rel_kernel_matrix[$i]}"
            logTrace "<${FUNCNAME[0]}> # ${release}>"

            [[ "${OS_VERSION}" != "${release}"* ]] && continue #handle kernel with subversions correctly

            _handled=true

            kernel_low="${_rel_kernel_matrix[$i+1]}"

            # returns 0 if equal, 1 if first is higher, 2 if second is higher
            LIB_FUNC_COMPARE_VERSIONS "${kernelversion}" "${kernel_low}"
            if [[ $? -eq 2 ]]; then

                logCheckError "Linux kernel does NOT match SLES release and must be changed (SAP Note ${sapnote:-}) (is: ${OS_VERSION} - ${OS_LEVEL}, must be >= ${kernel_low}.*)"
                _retval=2

            else

                kernel_high="${_rel_kernel_matrix[$i+2]}"

                LIB_FUNC_COMPARE_VERSIONS "${kernelversion}" "${kernel_high}"
                if [[ $? -eq 1 ]]; then

                    logCheckError "Linux kernel does NOT match SLES release and must be changed (SAP Note ${sapnote:-}) (is: ${OS_VERSION} - ${OS_LEVEL}, must be <= ${kernel_high}.*)"
                    _retval=2

                else

                    logCheckOk "Linux kernel matches SLES release (SAP Note ${sapnote:-}) (is: ${OS_VERSION} - ${OS_LEVEL})"
                    _retval=0

                fi

            fi

            break
        done

        if ! ${_handled}; then

            logCheckError "SLES version is NOT supported by SAP HANA (SAP Note #2235581) (is: ${OS_VERSION})"
            _retval=2

        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
