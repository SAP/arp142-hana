#!/bin/bash

function check_2500_kernel_sharedmemory {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r sapnote='#2534844,#941735'
    #2534844 v12 - Indexserver Crash During Startup due to Insufficient Shared Memory Segment
    #941735  v10 - SAP memory management system for 64-bit Linux systems

    #                               parameter              recommended_value RC
    # returns 0 if equal, 1 if first is higher, 2 if second is higher
    local -ar _shm_parameter=(\
                                    'kernel.shmmni'	                   32768  1  \
                                    'kernel.shmall'      1152921504606846720  1  \
                                    'kernel.shmmax'     18446744073709551615  1  \
    )
    # MODIFICATION SECTION<<

    local _curr_value
    local _reco_value
    local -i _rc_expected
    local -i _rc_current
    local _parameter

    # PRECONDITIONS

    # CHECK
    # i+=3 --> every 3rd item
    for ((i=0; i < ${#_shm_parameter[@]}; i+=3)); do

        logTrace "<${FUNCNAME[0]}> # ${_shm_parameter[$i]}>"

        _parameter=${_shm_parameter[$i]}
        _reco_value=${_shm_parameter[$i+1]}
        _rc_expected=${_shm_parameter[$i+2]}

        _curr_value=$(sysctl -n "${_parameter}")

        LIB_COMPARE_TOOBIG_NUMBERS "${_curr_value}" "${_reco_value}"
        _rc_current=$?

        if [[ ${_rc_current} -le ${_rc_expected}  ]] ; then
            logCheckOk "sysctl KSHM parameter ${_parameter} set as recommended (is: ${_curr_value})"
        else
            logCheckWarning "sysctl KSHM parameter ${_parameter} NOT set as recommended (is: ${_curr_value}, should be: ${_reco_value})"
            _retval=1
        fi

    done

    if [[ ${_retval} -eq 99 ]]; then

        logCheckOk "All kernel shared-memory sysctl parameter set as recommended (SAP Note ${sapnote:-})"
        _retval=0

    else

        logCheckWarning "Not All kernel shared-memory sysctl parameter set as recommended (SAP Note ${sapnote:-})"

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}
}