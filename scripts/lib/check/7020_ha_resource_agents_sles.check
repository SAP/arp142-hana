#!/usr/bin/env bash

function check_7020_ha_resource_agents_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local sapnote='#1552925'

    # https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server%20for%20SAP%20Applications&version=12.5&arch=x86_64&query=SAPHanaSR&module=
    local -ar _rpms_sles12=(
        'SAPHanaSR'             '0.162.4-3.42.1'
        'SAPHanaSR-ScaleOut'    '0.185.3-3.41.5'
    )

    local -ar _rpms_sles15=(
        'SAPHanaSR'             '0.162.4-150000.4.44.1'
        'SAPHanaSR-ScaleOut'    '0.185.3-150000.45.1'
    )
    # MODIFICATION SECTION<<

    #1552925 - Linux: High Availability Cluster Solutions
    #https://github.com/SUSE/SAPHanaSR
    #https://github.com/SUSE/SAPHanaSR-ScaleOut

    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif ! rpm -q --quiet SAPHanaSR && ! rpm -q --quiet SAPHanaSR-ScaleOut; then

        logCheckSkipped 'HA Resource Agents SAPHanaSR* not installed' "(SAP Note ${sapnote:-}). Skipping <${FUNCNAME[0]}>"
        _retval=3

    else

        case "${OS_VERSION}" in

        12.* )  local -n _rpm_packages='_rpms_sles12' ;;

        *)      local -n _rpm_packages='_rpms_sles15' ;;

        esac

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local _package
        local _exp_version
        local _curr_version

        # i+=2 --> every 2nd item
        for ((i = 0; i < ${#_rpm_packages[@]}; i += 2)); do

            _package="${_rpm_packages[$i]}"

            if ! rpm -q --quiet "${_package}"; then
                logCheckInfo "HA Resource Agent ${_package} not installed"
                continue
            fi

            _exp_version="${_rpm_packages[$i + 1]}"

            #normalize current version - e.g. 4.1.10-33.5.2
            LIB_FUNC_NORMALIZE_RPMn _exp_version

            _curr_version=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" "${_package}")
            LIB_FUNC_NORMALIZE_RPMn _curr_version

            # returns 0 if equal, 1 if first is higher, 2 if second is higher
            LIB_FUNC_COMPARE_VERSIONS "${_curr_version}" "${_exp_version}"
            if [[ $? -eq 2 ]]; then

                logCheckWarning "HA Resource Agent ${_package} should be updated (is: ${_curr_version}, should be: >=${_exp_version})"
                _retval=1

            else

                logCheckOk "HA Resource Agent ${_package} version seems to be ok (is: ${_curr_version})"

            fi

        done

        if [[ ${_retval} -eq 99 ]]; then

            logCheckOk "HA Resource Agents SAPHanaSR* versions seem to be ok (SAP Note ${sapnote:-})"
            _retval=0

        else

            logCheckWarning "HA Resource Agents SAPHanaSR* should be updated (SAP Note ${sapnote:-})"
            _retval=1
        fi
    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
