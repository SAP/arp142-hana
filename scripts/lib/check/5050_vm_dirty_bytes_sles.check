#!/usr/bin/env bash

function check_5050_vm_dirty_bytes_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r sapnote_sles12='#1984787'  # SUSE LINUX Enterprise Server 12: Installation notes
    local -r sapnote_sles15='#2578899'  # SUSE Linux Enterprise Server 15: Installation Note

    #                               parameter                       recommended_value
    local -ar _vm_parameter=(\
                                    'vm.dirty_bytes'                 629145600 \
                                    'vm.dirty_background_bytes'      314572800 \
    )
    # MODIFICATION SECTION<<

    local sapnote

    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES ; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    else

    # CHECK

        case "${OS_VERSION}" in

            15.* )  sapnote="${sapnote_sles15}" ;;
            * )     sapnote="${sapnote_sles12}" ;;

        esac

        local _curr_value
        local _reco_value
        local _parameter
        local _parameter_normalized

        # i+=2 --> every 2nd item
        for ((i=0; i < ${#_vm_parameter[@]}; i+=2)); do

            logTrace "<${FUNCNAME[0]}> # ${_vm_parameter[$i]}>"

            _parameter=${_vm_parameter[$i]}
            _parameter_normalized=${_parameter//./\/}
            logTrace "<${FUNCNAME[0]}> # ${_parameter_normalized}>"

            _reco_value=${_vm_parameter[$i+1]}

            if [[ ! -f "/proc/sys/${_parameter_normalized}" ]]; then

                logCheckInfo "sysctl parameter ${_parameter} not available"

            else
                _curr_value=$(</proc/sys/"${_parameter_normalized}")

            fi

            if [[ ${_curr_value} -ne ${_reco_value} ]]; then
                logCheckWarning "sysctl VM parameter ${_parameter} NOT set as recommended (is: ${_curr_value}, should be: ${_reco_value})"
                _retval=1
            else
                logCheckOk "sysctl VM parameter ${_parameter} set as recommended (is: ${_curr_value})"
            fi

        done

        if [[ ${_retval} -eq 99 ]]; then

            logCheckOk "All virtual memory dirty sysctl parameters set as recommended (SAP Note ${sapnote:-})"
            _retval=0

        else

            logCheckWarning "NOT all virtual memory dirty sysctl parameters set as recommended (SAP Note ${sapnote:-})"

        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}
}