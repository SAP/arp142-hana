#!/usr/bin/env bash

function check_1600_cpu_pstates_intel {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # https://www.kernel.org/doc/html/v4.12/admin-guide/pm/intel_pstate.html
    # https://www.kernel.org/doc/html/latest/admin-guide/pm/intel_pstate.html

    # MODIFICATION SECTION>>
    local -r sapnote='n/a'

    # MODIFICATION SECTION<<

    # PRECONDITIONS
    if ! LIB_FUNC_IS_INTEL ; then

        logCheckSkipped 'Not running on Intel CPU. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif ! LIB_FUNC_IS_BARE_METAL ; then

        logCheckSkipped 'Running virtualized. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    else

        case "${OS_VERSION}" in

            11.* | 6.* )
                logCheckSkipped "Check not applicable for Linux release (is: ${OS_NAME} ${OS_VERSION}). Skipping" "<${FUNCNAME[0]}>"
                _retval=3
            ;;

            * ) #intel_pstate only for IvyBridge onwards
                #INTEL_FAM6_IVYBRIDGE   0x3A --> DEC 58
                if [[ ${LIB_PLATF_CPU_MODELID} -ge 58 ]]; then
                    logCheckInfo "Running on intel_pstate supported Intel CPU (>=IvyBridge - ModelID: ${LIB_PLATF_CPU_MODELID})"
                else
                    logCheckSkipped 'Not running on intel_pstate supported Intel CPU (>=IvyBridge). Skipping' "<${FUNCNAME[0]}>"
                    _retval=3
                fi
            ;;


        esac

    fi

    #CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local sd_path='/sys/devices/system/cpu/cpu0/cpufreq/scaling_driver'

        local scaling_driver
        [[ -f ${sd_path} ]] && scaling_driver=$(<${sd_path})

        case ${scaling_driver:-} in

            'intel_pstate')
                        local hwp_enabled

                        if grep -qse '^flags.*hwp' -m1 /proc/cpuinfo ; then
                            logCheckInfo 'CPU hardware-managed P-states (HWP) available'
                            hwp_enabled='with HWP'
                        else
                            #typically old behavior - kernel <5.7 - RHEL8.4
                            logCheckInfo 'CPU hardware-managed P-states (HWP) NOT available or disabled by <intel_pstate=no_hwp>'
                            hwp_enabled='without HWP'
                        fi

                        logCheckOk "CPU scaling driver set as recommended (SAP Note ${sapnote:-}) (is: intel_pstate - active mode <${hwp_enabled}>)"
                        _retval=0
                ;;

            'intel_cpufreq')
                        #since kernel 5.7 - RHEL8.5
                        logCheckInfo 'CPU hardware-managed P-states (HWP) NOT available or disabled by <intel_pstate=no_hwp>'
                        logCheckWarning "CPU scaling driver NOT set as recommended (SAP Note ${sapnote:-}) (is: intel_pstate - passive mode, should be: active mode)"
                        _retval=1
                ;;

            '')
                        logCheckWarning "CPU scaling driver not loaded (SAP Note  ${sapnote:-}) (is: -, should be: intel_pstate)"
                        _retval=1
                ;;

            *)          logCheckWarning "CPU scaling driver NOT set as recommended (SAP Note ${sapnote:-}) (is: ${scaling_driver}, should be: intel_pstate)"
                        _retval=1
                ;;
        esac

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
