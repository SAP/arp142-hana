check_001_os_kernel_sles() {

	logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

	local -i _retval=99

	# MODIFICATION SECTION>>
	# array	'goodkernelversion'	'sap note'
	local -ar _kernel113=( '3.0.101-0.47.71' '#1954788' )
	local -ar _kernel114=( '3.0.101-104.2' '#2240716' )
	local -ar _kernel114power=( '3.0.101-104.2' '#2240716' )
	local -ar _kernel120=( '3.12.61-52.72.1' '#2205917' )
	local -ar _kernel121=( '3.12.74-60.64.40.1' '#2205917' )
	local -ar _kernel122=( '4.4.21-69.1' '#2205917' )
	local -ar _kernel121power=( '3.12.67-60.64.18' '#2205917' )
	# MODIFICATION SECTION<<

	if  ! lib_func_is_sles ;	then

		logCheckSkipped 'Linux distribution is not SLES. Skipping check' "<${FUNCNAME[0]}>"
		_retval=3

	else

		local _goodversion
		local _sapnote

		if lib_func_is_ibmpower ; then

			case "${OS_VERSION}" in

			11.3)
				logCheckError 'Upgrade to SLES for SAP Applications 11 SP4 (SAP Note #1557506)'
				_retval=2
				;;

			11.4)
					_goodversion="${_kernel114power[0]}"
					_sapnote="${_kernel114power[1]}"
				;;

			12.1*)
					_goodversion="${_kernel121power[0]}"
					_sapnote="${_kernel121power[1]}"
				;;

			*)
					logCheckError 'Current SLESonPower release is not supported (SAP Note #1557506)'
					_retval=2
				;;
			esac

		else

			case "${OS_VERSION}" in

				11.1 | 11.2 )
					logCheckError 'Upgrade to SLES for SAP Applications 11 SP4 (SAP Note #1557506)'
					_retval=2
					;;

				11.3)	_goodversion="${_kernel113[0]}"
						_sapnote="${_kernel113[1]}"
					;;

				11.4)
						_goodversion="${_kernel114[0]}"
						_sapnote="${_kernel114[1]}"
					;;

				12.0*)	_goodversion="${_kernel120[0]}"
						_sapnote="${_kernel120[1]}"
					;;

				12.1*)
						_goodversion="${_kernel121[0]}"
						_sapnote="${_kernel121[1]}"
					;;

				12.2*)
						_goodversion="${_kernel122[0]}"
						_sapnote="${_kernel122[1]}"
					;;

				*)
						logCheckWarning "CHECK does not support SLES release."
						_retval=1
					;;
			esac

		fi

		if [[ ${_retval} -eq 99 ]]; then

			local kernelversion=${OS_LEVEL}

			#ToDO: normalized kernel version should be provided by helper function - RegEx
			kernelversion=${kernelversion/PTF-default/1}	#3.0.101-0.47.71.7930.0.PTF-default
			kernelversion=${kernelversion/default/1}		#3.0.101-0.47.71-default
			kernelversion=${kernelversion/bigsmp/1}			#3.0.101-0.47-bigsmp
			kernelversion=${kernelversion/bigmem/1}			#3.0.101-88-bigmem
			kernelversion=${kernelversion/ppc64/1}			#3.0.101-71-ppc64

			lib_func_compare_versions "${kernelversion}" "${_goodversion}"
			if [[ $? -eq 2 ]]; then
				logCheckError "Linux kernel must be upgraded. (SAP Note ${_sapnote}) (is: ${OS_LEVEL}, should be: >=${_goodversion})"
				_retval=2
			else
				logCheckOk "Linux kernel version is at required level. (SAP Note ${_sapnote}) (is: ${OS_LEVEL})"
				_retval=0
			fi

		fi

	fi

	logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
	return ${_retval}

}

