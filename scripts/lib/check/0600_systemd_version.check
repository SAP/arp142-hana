#!/usr/bin/env bash

function check_0600_systemd_version {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # <1y old package or concrete newer version listed in any note
    #https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server&version=15&arch=x86_64
    #https://packagehub.suse.com/packages/systemd/

    #https://access.redhat.com/downloads/content/systemd/219-62.el7_6.17/x86_64/fd431d51/package

    # MODIFICATION SECTION>>
    local -ar sles12x=( '228-157.52.1' '#2205917' )
    local -ar sles151=( '234-150000.24.111.1' '#2684254' )
    local -ar sles153=( '246.16-150300.7.57.1' '#2684254' )
    local -ar sles154=( '249.17-150400.8.40.1' '#2684254' )
    local -ar sles156=( '254.13-150600.4.5.1' '#2684254' )
    local -ar rhel7=( '219-78.el7_9.9' '#2292690' )
    local -ar rhel8=( '239-45.el8_4.15' '#2777782' )
    local -ar rhel9=( '250-6.el9_0.2' '#3108302' )
    # MODIFICATION SECTION<<

    #2205917 SAP HANA DB: Recommended OS settings for SLES 12
    #2684254 SAP HANA DB: Recommended OS settings for SLES 15
    #2292690 SAP HANA DB: Recommended OS settings for RHEL 7
    #2777782 SAP HANA DB: Recommended OS Settings for RHEL 8
    #3108302 SAP HANA DB: Recommended OS Settings for RHEL 9

    local _goodversion
    local sapnote

    # PRECONDITIONS
    if LIB_FUNC_IS_SLES ; then
        case "${OS_VERSION}" in

            12.*)   _goodversion="${sles12x[0]}" ; sapnote="${sles12x[1]}" ;;

            15.[1-2] )  _goodversion="${sles151[0]}" ; sapnote="${sles151[1]}" ;;
            15.3)       _goodversion="${sles153[0]}" ; sapnote="${sles153[1]}" ;;
            15.[4-5] )  _goodversion="${sles154[0]}" ; sapnote="${sles154[1]}" ;;
            15.* )      _goodversion="${sles156[0]}" ; sapnote="${sles156[1]}" ;;

            *)      logCheckSkipped 'CHECK not applicable for SLES release' "(is: ${OS_VERSION}). Skipping <${FUNCNAME[0]}>"
                    _retval=3
                ;;
        esac

    elif LIB_FUNC_IS_RHEL ; then
        case "${OS_VERSION}" in

            7.*)    _goodversion="${rhel7[0]}" ; sapnote="${rhel7[1]}" ;;

            8.*)    _goodversion="${rhel8[0]}" ; sapnote="${rhel8[1]}" ;;

            9.*)    _goodversion="${rhel9[0]}" ; sapnote="${rhel9[1]}" ;;

            *)      logCheckSkipped 'CHECK not applicable for RHEL release' "(is: ${OS_VERSION}). Skipping <${FUNCNAME[0]}>"
                    _retval=3
                ;;
        esac

    else
            logCheckError "Linux distribution NOT supported (SAP Note #2235581) (is: ${OS_NAME} ${OS_VERSION}) - <${FUNCNAME[0]}>"
            _retval=2
    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local normalized_goodversion
        local normalized_fullversion

        local _fullversion
        _fullversion=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" systemd)

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize full version - e.g. 219-19.el7_2.4
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        # returns 0 if equal, 1 if first is higher, 2 if second is higher
        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"

        if [[ $? -ne 2 ]]; then
            logCheckOk "SYSTEMD version seems to be ok (SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0
        else
            logCheckError "SYSTEMD must be updated (SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
