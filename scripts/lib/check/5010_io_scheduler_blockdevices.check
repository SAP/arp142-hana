#!/usr/bin/env bash

function check_5010_io_scheduler_blockdevices {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99
    local sapnote

    # MODIFICATION SECTION>>
    local sapnote_sles='#2578899,#1984787'
    local sapnote_rhel='#2009879'
    local sapnote_vmware='#2161991'
    local sapnote_aws='#1656250'
    local sapnote_azure='#2015553'
    local sapnote_kvm='#1400911'
    local sapnote_xen='#1788665'

    local -r reco_io_scheduler='noop|none|deadline|mq-deadline'

    local search_pattern
    #local search_pattern_skip_none='/sys/block/**/queue/scheduler'                     #skip none
    local -r search_pattern_skip_first1='/sys/block/{sd[^a],dm,nvme}*/queue/scheduler'     #skip sda = OS
    local -r search_pattern_azure='/sys/block/sd[^ab]*/queue/scheduler'                    #skip sda = OS and sdb = temp
    local -r search_pattern_xen='/sys/block/xvd[^a]*/queue/scheduler'                      #skip xvda = OS
    local -r search_pattern_aws_xen='/sys/block/xvd[^ab]*/queue/scheduler'                 #skip xvda = OS and xvdb = swap
    local -r search_pattern_aws_kvm='/sys/block/nvme*/queue/scheduler'                     #skip none, search nvme
    # MODIFICATION SECTION<<

    # 1944799 - SAP HANA Guidelines for SLES Operating System Installation
    # 1984787 - SUSE LINUX Enterprise Server 12: Installation notes
    # 2578899 - SUSE Linux Enterprise Server 15: Installation Note
    # 2009879 - SAP HANA Guidelines for Red Hat Enterprise Linux (RHEL) Operating System
    # 2161991 - VMware vSphere configuration guidelines
    # 1400911 - Linux: SAP NetWeaver on Red Hat KVM - Kernel-based Virtual Machine
    # 1656250 - SAP on AWS: Support prerequisites
    # 2015553 - SAP on Microsoft Azure: Support prerequisites
    # https://learn.microsoft.com/en-us/azure/sap/workloads/hana-vm-operations-storage#linux-io-scheduler-mode
    # 1788665 - SAP HANA Support for virtualized / partitioned (multi-tenant) environments

    # PRECONDITIONS
    if [[ ! -d '/sys/block/' ]]; then

        logCheckSkipped 'Block devices IO scheduler configuration NOT readable. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif LIB_FUNC_IS_CLOUD_MICROSOFT; then

        sapnote="${sapnote_azure}"
        #skip sda = OS and sdb = temp
        search_pattern="${search_pattern_azure}"

    elif LIB_FUNC_IS_CLOUD_AMAZON; then

            sapnote="${sapnote_aws}"

            LIB_FUNC_IS_VIRT_KVM && search_pattern=${search_pattern_aws_kvm}
            LIB_FUNC_IS_VIRT_XEN && search_pattern=${search_pattern_aws_xen}

    elif LIB_FUNC_IS_VIRT_VMWARE; then

        sapnote="${sapnote_vmware}"

    elif LIB_FUNC_IS_VIRT_KVM; then

        sapnote="${sapnote_kvm}"

    elif LIB_FUNC_IS_VIRT_XEN; then

        sapnote="${sapnote_xen}"
        search_pattern=${search_pattern_xen}

    elif LIB_FUNC_IS_SLES ; then

        sapnote="${sapnote_sles}"

    elif LIB_FUNC_IS_RHEL ; then

        sapnote="${sapnote_rhel}"
    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        logCheckInfo 'Only applicable for HANA Persistence stored on block devices - e.g. local, fiberchannel !'
        logCheckInfo 'Check not applicable for NAS configurations !'
        logCheckInfo '---'

        [[ -z "${search_pattern:-}" ]] && search_pattern=${search_pattern_skip_first1}

        logDebug "<${BASH_SOURCE[0]}> # RX=${search_pattern}"
        #logDebug "<${BASH_SOURCE[0]}> # : grep --no-messages --only-matching --no-filename '\\[.*\\]' ${search_pattern} >"

        local -a all_io_schedulers

        # read all_io_schedulers into array; eval required for shell brace expansion {} in search_pattern
        mapfile -t all_io_schedulers < <(eval grep --no-messages --only-matching --no-filename '\\[.*\\]' "${search_pattern}" | sort --unique)

        case ${#all_io_schedulers[@]} in     #array length

            0)      logCheckWarning "IO scheduler not known (SAP Note ${sapnote:-})"
                    _retval=1
                ;;

            *)      [[ ${#all_io_schedulers[@]} -gt 1 ]] && logCheckInfo "Multiple IO scheduler set - ${all_io_schedulers[*]}"

                    for _scheduler in "${all_io_schedulers[@]}" ; do

                        _scheduler="${_scheduler//[\[\]]/}" #remove [ ]

                        if ! LIB_FUNC_STRINGCONTAIN "${reco_io_scheduler}" "${_scheduler}"; then

                            logCheckWarning "IO scheduler NOT set as recommended (is: ${_scheduler})"
                            _retval=1

                        else

                            logCheckOk "IO scheduler set as recommended (is: ${_scheduler})"

                        fi

                    done

                ;;
        esac

        if [[ ${_retval} -eq 99 ]]; then

            logCheckOk "All IO scheduler set as recommended (SAP Note ${sapnote:-}) (should be: ${reco_io_scheduler})"
            _retval=0

        else

            logCheckWarning "NOT all IO scheduler set as recommended (SAP Note ${sapnote:-}) (should be: ${reco_io_scheduler})"

        fi

    fi

    logDebug "<${BASH_SOURCE[0]}> # RC=${_retval}"
    return ${_retval}
}
