#!/usr/bin/env bash

function check_0410_glibc_ibmpower {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -ar sles114=('2.11.3-17.95.2' '#2263929')
    local -ar sles121=('2.19-38.2' '#2263929')
    local -ar sles122=('2.22-61.3' '#2205917')
    local -ar sles124=('2.22-15.3' '#2205917')
    local -ar sles150=('2.22-61.3' '#2684254')
    local -ar rhel73=('2.17-157.el7_3.5' '#2292690')
    local -ar rhel74=('2.17-196.el7' '#1943937')        #LandscapeTest_2018_11_15.py
    local -ar rhel80=('2.17-196.el8' '#2777782')
    # MODIFICATION SECTION<<

    #2263929 - SAP HANA DB: Hang during out-of-memory situation
    #2240716 - SAP HANA DB: Recommended OS settings for SLES 11 / SLES for SAP Applications 11 SP4
    #2205917 - SAP HANA DB: Recommended OS settings for SLES 12 / SLES for SAP Applications 12
    #2684254 - SAP HANA DB: Recommended OS settings for SLES 15 / SLES for SAP Applications 15
    #2292690 - SAP HANA DB: Recommended OS settings for RHEL 7
    #2777782 - SAP HANA DB: Recommended OS Settings for RHEL 8
    #1943937 - Hardware Configuration Check Tool - Central Note

    local _goodversion
    local sapnote

    # PRECONDITIONS
    if ! LIB_FUNC_IS_IBMPOWER; then

        logCheckSkipped 'Not running on IBM Power. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    else

        if LIB_FUNC_IS_SLES; then
            case "${OS_VERSION}" in

                11.4*)      _goodversion="${sles114[0]}" ; sapnote="${sles114[1]}" ;;

                12.1*)      _goodversion="${sles121[0]}" ; sapnote="${sles121[1]}" ;;

                12.[2-3]*)  _goodversion="${sles122[0]}" ; sapnote="${sles122[1]}" ;;

                12.4*)      _goodversion="${sles124[0]}" ; sapnote="${sles124[1]}" ;;

                15.*)       _goodversion="${sles150[0]}" ; sapnote="${sles150[1]}" ;;

                *)          logCheckWarning 'CHECK does not support SLES release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                            _retval=1
                    ;;
            esac

        elif LIB_FUNC_IS_RHEL; then
            case "${OS_VERSION}" in

                7.3* )      _goodversion="${rhel73[0]}" ; sapnote="${rhel73[1]}" ;;

                7.[4-6]* )  _goodversion="${rhel74[0]}" ; sapnote="${rhel74[1]}" ;;

                8.* )       _goodversion="${rhel80[0]}" ; sapnote="${rhel80[1]}" ;;

                *)          logCheckWarning 'CHECK does not support RHEL release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                            _retval=1
                    ;;
            esac

        else
            logCheckError "Linux distribution NOT supported (SAP Note #2235581) (is: ${OS_NAME} ${OS_VERSION}) - <${FUNCNAME[0]}>"
            _retval=2
        fi

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local normalized_goodversion
        local normalized_fullversion

        local _fullversion
        _fullversion=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" glibc)

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize full version - e.g. 2.17-157.el7_3.5
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"

        if [[ $? -ne 2 ]]; then
            logCheckOk "GLIBC version seems to be ok (SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0
        else
            logCheckError "GLIBC must be updated (SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
