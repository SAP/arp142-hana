#!/usr/bin/env bash

function check_0410_glibc_ibmpower {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # <1y old package or concrete newer version listed in any note
    # https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server&version=12.5&arch=ppc64le&query=glibc
    # https://www.suse.com/de-de/search/?s=Recommended+update+for+glibc#gsc.tab=0&gsc.q=Recommended%20update%20for%20glibc
    # https://access.redhat.com/downloads/content/glibc/ppc64le/package-latest

    # MODIFICATION SECTION>>
    local -ar sles125=( '2.22-114.34.1' '#2205917' )
    local -ar sles153=( '2.31-150300.89.2' '#2684254' )
    local -ar rhel79=( '2.17-326.el7_9.3' '#2292690' )
    local -ar rhel84=( '2.28-151.el8_4.4' '#2777782' )
    local -ar rhel90=( '2.34-28.el9_0.6' '#3108302,3318049' )
    local -ar rhel92=( '2.34-60.el9_2.15' '#3108302' )
    local -ar rhel96=( '2.34-168.el9_6.20' '#3108302' )
    # MODIFICATION SECTION<<

    #2205917 - SAP HANA DB: Recommended OS settings for SLES 12
    #2684254 - SAP HANA DB: Recommended OS settings for SLES 15
    #2292690 - SAP HANA DB: Recommended OS settings for RHEL 7
    #2777782 - SAP HANA DB: Recommended OS Settings for RHEL 8
    #3108302 - SAP HANA DB: Recommended OS Settings for RHEL 9
    #3318049 - Indexserver Crashes When Running on RHEL 9.x

    local _goodversion
    local sapnote

    # PRECONDITIONS
    if ! LIB_FUNC_IS_IBMPOWER; then

        logCheckSkipped 'Not running on IBM Power. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif LIB_FUNC_IS_SLES; then

        case "${OS_VERSION}" in

            12.5)       _goodversion="${sles125[0]}" ; sapnote="${sles125[1]}" ;;

            15.[3-7])   _goodversion="${sles153[0]}" ; sapnote="${sles153[1]}" ;;

            *)          logCheckWarning 'CHECK does not support SLES release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                        _retval=1 ;;
        esac

    elif LIB_FUNC_IS_RHEL; then

        case "${OS_VERSION}" in

            7.9 )       _goodversion="${rhel79[0]}" ; sapnote="${rhel79[1]}" ;;

            8.[4-9] | 8.10 )    _goodversion="${rhel84[0]}" ; sapnote="${rhel84[1]}" ;;

            9.[0-1] )   _goodversion="${rhel90[0]}" ; sapnote="${rhel90[1]}"

                        logCheckWarning "GLIBC requires these minimum HANA Revisions >= 059.08 || >= 067.01 (SAP Note ${sapnote:-})"
                        _retval=1
                        ;;

            9.[2-5] )   _goodversion="${rhel92[0]}" ; sapnote="${rhel92[1]}"
                        ;;

            9.* )       _goodversion="${rhel96[0]}" ; sapnote="${rhel96[1]}"
                        ;;


            *)          logCheckWarning 'CHECK does not support RHEL release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                        _retval=1 ;;
        esac

    else
        logCheckError "Linux distribution NOT supported (SAP Note #2235581) (is: ${OS_NAME} ${OS_VERSION}) - <${FUNCNAME[0]}>"
        _retval=2
    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local normalized_goodversion
        local normalized_fullversion

        local _fullversion
        _fullversion=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" glibc)

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize full version - e.g. 2.17-157.el7_3.5
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        # returns 0 if equal, 1 if first is higher, 2 if second is higher
        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"

        if [[ $? -ne 2 ]]; then
            logCheckOk "GLIBC version seems to be ok (SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0
        else
            logCheckError "GLIBC must be updated (SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
