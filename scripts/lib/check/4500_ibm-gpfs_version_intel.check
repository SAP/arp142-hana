#!/usr/bin/env bash

function check_4500_ibm-gpfs_version_intel {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r sapnote='#1880960,#2533550'
    local -r _goodversion5='5.0.4.3'    #Note version  36 10.06.2020
    local -r _goodversion5_SLES152='5.0.5.2'    #Note version  36 10.06.2020
    local -r _goodversion5_RHEL82='5.0.5.1'    #Note version  36 10.06.2020
    # MODIFICATION SECTION<<

    #1880960 - Lenovo Systems Solution for SAP HANA Platform Edition FW/OS/Driver Maintenance
    #2533550 - Lenovo Systems Solution for SAP HANA Platform Edition FW/OS/Driver Maintenance (SR950)

    # PRECONDITIONS
    if ! LIB_FUNC_IS_INTEL ; then

        logCheckSkipped 'Not running on Intel CPU. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif ! rpm -q --quiet gpfs.base ; then

        logCheckSkipped 'GPFS not installed. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local normalized_goodversion
        local normalized_fullversion
        local _goodversion

        local _fullversion
        _fullversion=$(rpm -q --queryformat "%{VERSION}.%{RELEASE}" gpfs.base)

        case ${_fullversion} in

            3.*)        logCheckError 'Support for IBM GPFS v3.5.x ended on April 30, 2017 !!!' ;;
            4.*)        logCheckError 'Support for IBM GPFS v4.2.x ended on Sept 30, 2020 !!!'  ;;

        esac

        _goodversion=${_goodversion5}

        if LIB_FUNC_IS_SLES; then

            # returns 0 if equal, 1 if first is higher, 2 if second is higher
            LIB_FUNC_COMPARE_VERSIONS "${OS_VERSION}" '15.2'
            [[ $? -ne 2 ]] && _goodversion=${_goodversion5_SLES152}

        elif LIB_FUNC_IS_RHEL; then

             # returns 0 if equal, 1 if first is higher, 2 if second is higher
            LIB_FUNC_COMPARE_VERSIONS "${OS_VERSION}" '8.2'
            [[ $? -ne 2 ]] && _goodversion=${_goodversion5_RHEL82}

        fi

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize full version
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        # returns 0 if equal, 1 if first is higher, 2 if second is higher
        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"

        if [[ $? -ne 2 ]]; then
            logCheckOk 'GPFS version seems to be ok' "(SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0
        else
            logCheckError 'GPFS must be updated' "(SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
