#!/usr/bin/env bash

function check_0021_os_kernel_knownissues_rhel {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    # array 'release' 'lower boundary' 'upper boundary' 'SAP Note'
    local -a _rhel_all=(\
                        '8.1'   '4.18.0-147.el8'            '4.18.0-147.8.0.el8'    '#RHSA-2020:1372' \
                        '9.2'   '5.14.0-284.el9'            '5.14.0-284.40.0'       '#KCS-6740861' \
                        '8.6'   '4.18.0-372.32.1'           '4.18.0-372.36.0'       '#KCS-6981979' \
                        '8.6'   '4.18.0-372.el8'            '4.18.0-372.26.0'       '#KCS-6740861' \
                        '8.4'   '4.18.0-305.el8'            '4.18.0-305.62.0'       '#KCS-6740861' \
                        '6.10'  '2.6.32-754.15.3.el6'       '2.6.32-754.22.0.el6'   '#2812427' \
                        )

    local -ar _rhel_azure=(\
                        '9.2' '5.14.0-284.1'                '5.14.0-284.25.0'       '#3323613' \
                        '9.0' '5.14.0-70.1'                 '5.14.0-70.70.0'        '#3323613' \
                        '8.8' '4.18.0-477.1'                '4.18.0-477.21.0'       '#3323613' \
                        '8.6' '4.18.0-372.32.1'             '4.18.0-372.51.0'       '#1928533, M832ixs_v2 only' \
                        '8.6' '4.18.0-372.1'                '4.18.0-372.64.0'       '#3323613' \
                        '8.4' '4.18.0-305.1'                '4.18.0-305.108.0'      '#3323613' \
                        '8.2' '4.18.0-193.1'                '4.18.0-193.116.0'      '#3323613' \
                        '7.9' '3.10.0-1160.1'               '3.10.0-1160.999'       '#3323613' \
                        )

    local -ar _rhel_ibmpower=(\
                        '8.2'   '4.18.0-193.el8'            '4.18.0-193.999.el8'    '#3165100,3159746' \
                        '8.1'   '4.18.0-147.el8'            '4.18.0-147.999.el8'    '#3165100,3159746' \
                        )
    # MODIFICATION SECTION<<

    #2812427 - Timeout or connection failure in SAP process after Linux kernel update
    #RHSA-2020:1372 - [HPE 8.0 BUG] System crash when reading /sys/block//mq/0/cpu_list file (BZ#1797960)
    #3159746 - Hana Revision 6x crashes on Linux kernel 4.12 or 4.18 on IBM Power platform
    #3165100 - Advices on permanent solutions for the issue in SAP note 3165087
    #KCS-6981979 RHEL 8: Slower application Read/Write file IO performance
    #KCS-6740861 Percpu memory accounts for a large percentage of memory
    #1928533 - SAP Applications on Microsoft Azure: Supported Products and Azure VM types - M832ixs_v2

    #3323613 - Azure - Linux OS Crash due to large number of disable/enable requests for VMs using Accelerated Networking

    # PRECONDITIONS
    if ! LIB_FUNC_IS_RHEL; then

        logCheckSkipped 'Linux distribution is not RHEL. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif LIB_FUNC_IS_CLOUD_MICROSOFT; then

        _rhel_all+=("${_rhel_azure[@]}")

    elif LIB_FUNC_IS_IBMPOWER; then

        _rhel_all+=("${_rhel_ibmpower[@]}")

    fi

    #CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local _rhel_release
        local _kernel_lower
        local _kernel_higher
        local kernelversion

        LIB_FUNC_NORMALIZE_KERNEL "${OS_LEVEL}"
        kernelversion="${LIB_FUNC_NORMALIZE_KERNEL_RETURN}"

        # i+=4 --> every 4th item
        for ((i=0; i < ${#_rhel_all[@]}; i+=4)); do

            logTrace "<${FUNCNAME[0]}> # ${_rhel_all[$i]}>"

            _rhel_release="${_rhel_all[$i]}"

            [[ "${OS_VERSION}" != "${_rhel_release}"* ]] && continue #handle kernel with subversions correctly

            _kernel_lower="${_rhel_all[$i+1]}"
            _kernel_higher="${_rhel_all[$i+2]}"
            _sapnote="${_rhel_all[$i+3]}"

            LIB_FUNC_NORMALIZE_KERNEL "${_kernel_higher}"
            _kernel_higher="${LIB_FUNC_NORMALIZE_KERNEL_RETURN}"

            # returns 0 if equal, 1 if first is higher, 2 if second is higher
            LIB_FUNC_COMPARE_VERSIONS "${kernelversion}" "${_kernel_higher}"
            if [[ $? -ne 1 ]]; then

                #kernel is NOT higher than blacklisted high boundary - check lower value if in blacklist range

                LIB_FUNC_NORMALIZE_KERNEL "${_kernel_lower}"
                _kernel_lower="${LIB_FUNC_NORMALIZE_KERNEL_RETURN}"

                LIB_FUNC_COMPARE_VERSIONS "${kernelversion}" "${_kernel_lower}"
                if [[ $? -le 1 ]]; then

                    logCheckError "Linux kernel has known serious issues and should be avoided (SAP Note ${_sapnote:-}) (is: ${OS_LEVEL}, should be > ${_kernel_higher}.*)"
                    _retval=2

                fi

            fi

        done

        if [[ ${_retval} -eq 99 ]]; then

            logCheckOk "Linux kernel has no known serious issues (is: ${OS_LEVEL})"
            _retval=0

        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
