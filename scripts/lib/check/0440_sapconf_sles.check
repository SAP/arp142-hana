#!/usr/bin/env bash

function check_0440_sapconf_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r sapnote='#1275776'         #1275776 - Linux: Preparing SLES for SAP environments

    local -r sles12x='5.0.6-40.77.1'
    local -r sles15x='5.0.6-150000.7.27.1'
    # MODIFICATION SECTION<<

    local _goodversion

    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES ; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif ! rpm -q --quiet sapconf ; then

        logCheckSkipped 'sapconf not installed' "(SAP Note ${sapnote:-}). Skipping <${FUNCNAME[0]}>"
        _retval=3

    else

        case "${OS_VERSION}" in

                12.5     )  : "${sles12x}" ;;
                15.[1-5] )  : "${sles15x}" ;;

                *)
                        logCheckWarning 'Check does not support SLES release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                        _retval=1
                    ;;
        esac

        _goodversion="$_"

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local _fullversion
        local normalized_goodversion
        local normalized_fullversion

        local _is_used=false

        if systemctl is-enabled "sapconf" --quiet; then
            logCheckInfo 'sapconf is installed and enabled'
            _is_used=true
        else
            logCheckInfo 'sapconf is installed but not enabled - saptune in use?'
        fi

        if systemctl is-active "sapconf" --quiet; then
            logCheckInfo 'sapconf is active'
            _is_used=true
        else
            logCheckInfo 'sapconf is not active'
        fi

        _fullversion=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" sapconf)

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize full version - e.g. 4.1.10-33.5.2
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        # returns 0 if equal, 1 if first is higher, 2 if second is higher
        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"
        if [[ $? -ne 2 ]]; then

            logCheckOk 'sapconf version seems to be ok' "(SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0

        elif ${_is_used} ; then

            logCheckError 'sapconf must be updated' "(SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2

        else

            logCheckWarning 'sapconf should be updated in case of future usage' "(SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=1

        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
