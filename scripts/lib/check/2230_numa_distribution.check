#!/usr/bin/env bash

function check_2230_numa_distribution {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r sapnote='#2470289'
    # MODIFICATION SECTION<<

    #2470289 - FAQ: SAP HANA Non-Uniform Memory Access (NUMA)
    #2923962 - Check SAP HANA NUMA Layout on IBM Power Systems Virtual Servers

    # PRECONDITIONS
    if LIB_FUNC_IS_BARE_METAL ; then

        logCheckSkipped 'Not running virtualized. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    else

        local -a numa_memory_totals
        local -a numa_lcpu_lists

        mapfile -t numa_memory_totals < <(grep -h -m1 'MemTotal' -r /sys/devices/system/node/node*/meminfo)
        mapfile -t numa_lcpu_lists < <(grep -H "^.*$" -r /sys/devices/system/node/node*/cpulist)

        if [[ ${#numa_memory_totals[@]} -ne ${#numa_lcpu_lists[@]} ]]; then

            logCheckWarning "Different Number of Memory-NUMA and CPU-NUMA nodes extracted !"
            _retval=66

        fi

    fi

    #CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local -i curr_node
        local -i curr_node_memory
        local -i curr_node_cpu

        local -i total_memory=0
        local -i total_cpus=0
        local -a ratios=()
        local -a nodes=()

        local rx_memory='^Node +([0-9]+) +MemTotal: +([0-9]+) +(.*)$'       #Node 0 MemTotal:       759310156 kB
        local rx_cpu='node([0-9]+).*:(.*)$'                                 #/sys/devices/system/node/node0/cpulist:40-59,60-79
        local rx_cpu_range='([0-9]+)\-([0-9]+)'                             #40-59,60-79

        for ((i=0; i < ${#numa_memory_totals[@]}; i+=1)); do

            if [[ ${numa_memory_totals[$i]} =~ ${rx_memory} ]]; then

                logTrace "Memory node rx.match <${BASH_REMATCH[0]}>,<${BASH_REMATCH[1]}>,<${BASH_REMATCH[2]}>"
                #Node 0 MemTotal:       759310156 kB
                # "Node matched part is ${BASH_REMATCH[1]}"     = 0
                # "Value matched part is ${BASH_REMATCH[2]}"    = 759310156
                # "Unit matched part is ${BASH_REMATCH[3]}"     = kB

                curr_node=${BASH_REMATCH[1]:-}
                curr_node_memory=${BASH_REMATCH[2]:0}

                if [[ ${numa_lcpu_lists[$i]} =~ ${rx_cpu} ]]; then

                    curr_node_cpu=0 #reset

                    logTrace "CPU node rx.match <${BASH_REMATCH[0]}> <${BASH_REMATCH[1]}> <${BASH_REMATCH[2]}>"
                    #/sys/devices/system/node/node4/cpulist:0-87,100-187
                    # "Node matched part is ${BASH_REMATCH[1]}"         = 4
                    # "Value matched part is ${BASH_REMATCH[2]}"        = 0-87,100-187 or Empty

                    if [[ ${curr_node} -ne ${BASH_REMATCH[1]} ]]; then

                        logCheckWarning "NUMA Memory node <${curr_node}> does NOT match NUMA CPU node <${BASH_REMATCH[1]}>!"
                        _retval=66
                        break

                    elif [[ -z ${BASH_REMATCH[2]} ]]; then
                        curr_node_cpu=0

                    else

                        IFS="," read -ra ranges <<< "${BASH_REMATCH[2]}"
                        for element in "${ranges[@]}"; do

                            if [[ ${element} =~ ${rx_cpu_range} ]]; then
                                logTrace "CPU range rx.match <${BASH_REMATCH[0]}> <${BASH_REMATCH[1]}> <${BASH_REMATCH[2]}>"
                                # 0-87  or  100-187
                                # "Value lower matched part is ${BASH_REMATCH[1]}"  = 0     or 100
                                # "Value upper matched part is ${BASH_REMATCH[2]}"  = 87    or 187

                                curr_node_cpu+=$((BASH_REMATCH[2]-BASH_REMATCH[1]+1))    # 0-87

                            fi
                        done

                    fi

                else

                    logCheckWarning "NUMA CPU node NOT processed <${numa_lcpu_lists[$i]}>!"
                    _retval=66
                    break

                fi

                logDebug "NUMA node ${curr_node}, MEM: ${curr_node_memory}, #CPU: ${curr_node_cpu}"

                if [[ ${curr_node_memory} -eq 0 && ${curr_node_cpu} -eq 0 ]]; then

                    continue   # ignore NUMA 0

                elif [[ ${curr_node_memory} -eq 0 ]]; then

                    logCheckError "NUMA node without memory (Node ${curr_node}, MEM: 0, #CPU: ${curr_node_cpu})"
                    _retval=88
                    break

                elif [[ ${curr_node_cpu} -eq 0 ]]; then

                    logCheckWarning "NUMA node without CPU (Node ${curr_node}, MEM: ${curr_node_memory}, #CPU: 0)"
                    _retval=77
                    break

                fi

            else

                logCheckWarning "NUMA Memory node NOT processed <${numa_memory_totals[$i]}>!"
                _retval=66
                break

            fi

            _=$(( total_memory+=curr_node_memory ))
            _=$(( total_cpus+=curr_node_cpu ))

            ratios+=( $((curr_node_memory/curr_node_cpu)) )
            nodes+=("${curr_node}")

        done

    fi

    #calc node deviation
    if [[ ${_retval} -eq 99 ]]; then

        local -i avg_ratio
        local -i margin
        local -i upper_bound
        local -i lower_bound

        avg_ratio=$((total_memory/total_cpus))
        margin=$((avg_ratio*1/10))  #10% margin ??
        upper_bound=$((avg_ratio+margin))
        lower_bound=$((avg_ratio-margin))

        logCheckInfo "Total MEM: ${total_memory}, Total #CPU: ${total_cpus}, avg ratio: ${avg_ratio}, (+/-)10% margin: ${margin}"

        for ((i=0; i < ${#ratios[@]}; i+=1)); do

            if [[ ${ratios[$i]} -lt ${lower_bound} || ${ratios[$i]} -gt ${upper_bound} ]]; then

                logCheckError "NUMA node ratio out of bounds - Node ${nodes[$i]}: ${ratios[$i]}"
                _retval=55
            fi

        done

    fi

    if [[ ${_retval} -eq 99 ]]; then

            logCheckOk "NUMA distribution - Memory/Core as expected (SAP Note ${sapnote:-})"
            _retval=0

    elif [[ ${_retval} -eq 88 ]]; then

            logCheckError "NUMA distribution - node without memory detected (SAP Note ${sapnote:-})"
            _retval=2

    elif [[ ${_retval} -eq 77 ]]; then

            logCheckWarning "NUMA distribution - node without CPU detected (SAP Note ${sapnote:-})"
            _retval=1

    elif [[ ${_retval} -eq 66 ]]; then

            logCheckWarning "NUMA distribution - check not possible. Verify manually (SAP Note ${sapnote:-})"
            _retval=1

    elif [[ ${_retval} -eq 55 ]]; then

            logCheckError "NUMA distribution - unbalanced NUMA core/memory ratio (SAP Note ${sapnote:-})"
            _retval=2

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
