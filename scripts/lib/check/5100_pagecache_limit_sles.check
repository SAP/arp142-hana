#!/usr/bin/env bash

function check_5100_pagecache_limit_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local -r sapnote='#1557506'    #1557506 - Linux paging improvements
    # MODIFICATION SECTION<<

    # PRECONDITIONS
    if  ! LIB_FUNC_IS_SLES ;	then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif [[ ! ${OS_VERSION} =~ (11|12)\. ]]; then

        logCheckSkipped 'Check not applicable for SLES release' "(is: ${OS_VERSION}). Skipping <${FUNCNAME[0]}>"
        _retval=3

    elif [[ ! -f '/proc/sys/vm/pagecache_limit_mb' ]]; then

        logCheckSkipped "Pagecache Limit not configurable (SAP Note ${sapnote:-}). Skipping" "<${FUNCNAME[0]}>"
        _retval=3

    else
        # CHECK

        local -i calc_pg_limit
        # shellcheck disable=SC2154
        calc_pg_limit=$(( LIB_PLATF_RAM_MiB_AVAILABLE * 2 / 100 ))

        # <  256 GB:    4096	            (=recommended limit) (262144 MB)
        # >= 256 GB:    2% of RAM_MiB
        # https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic
        local -i reco_pgcache_limit
        reco_pgcache_limit=$(( LIB_PLATF_RAM_MiB_AVAILABLE > 262144 ? calc_pg_limit : 4096 ))
        local -i pgcache_limit_mb
        pgcache_limit_mb=$(</proc/sys/vm/pagecache_limit_mb)

        if [[ ${pgcache_limit_mb} -eq 0 ]]; then

            logCheckOk "vm.pagecache_limit_mb is set as recommended (SAP Note ${sapnote:-}) (is: 0)"
            _retval=0

        else

            logCheckWarning "vm.pagecache_limit_mb is set - should only be set to address a certain issue (SAP Note ${sapnote:-}) (is: ${pgcache_limit_mb}, should be: 0)"
            _retval=1

            # to avoid errors of small difference
            local -i pg_fuzzy_lower
            pg_fuzzy_lower=$(( pgcache_limit_mb + 50 ))
            local -i pg_fuzzy_upper
            pg_fuzzy_upper=$(( pgcache_limit_mb - 50 ))

            if [[ ${pg_fuzzy_lower} -lt ${reco_pgcache_limit} ]]; then

                logCheckError "vm.pagecache_limit_mb is set to low (SAP Note ${sapnote:-}) (is: ${pgcache_limit_mb}, should be: ${reco_pgcache_limit})"
                _retval=2

            elif [[ ${pg_fuzzy_upper} -gt ${reco_pgcache_limit} ]]; then

                logCheckWarning "vm.pagecache_limit_mb is set to high (SAP Note ${sapnote:-}) (is: ${pgcache_limit_mb}, should be: ${reco_pgcache_limit})"
                _retval=1

            fi
        fi

    fi

    #pgcache_ignore_dirty
    if [[ ${_retval} -eq 1 && ${_retval} -eq 2 ]]; then

        local -i pgcache_ignore_dirty
        pgcache_ignore_dirty=$(</proc/sys/vm/pagecache_limit_ignore_dirty)
        logCheckInfo "vm.pagecache_limit_ignore_dirty depends on HANA Data+Log filesystem (is: ${pgcache_ignore_dirty}, should be: 0 for local FS, 1 for NFS)"

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}
}
