#!/usr/bin/env bash

function check_2600_vm_dentry_unused {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    local sapnote='#2753342'
    local -r rh_solution='Red Hat KB #55818'
    local -ri dentry_unused_expected=10000000
    # MODIFICATION SECTION<<

    # 2753342 - BUG: soft lockup - CPU#x stuck for xxs!

    # The dentry_cache / dentry slab cache size continually grows on Red Hat Enterprise Linux
    # https://access.redhat.com/solutions/55818

    # PRECONDITIONS
    if [[ ! -f  '/proc/sys/fs/dentry-state' ]]; then

        logCheckSkipped "dentry-state statistics not readable (SAP KBA ${sapnote:-}). Skipping" "<${FUNCNAME[0]}>"
        _retval=3

    elif LIB_FUNC_IS_RHEL ; then

        sapnote+=",${rh_solution}"

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        # SLES Kernel tunable avaible and set ?
        if [[ -f  '/proc/sys/fs/procfs-drop-fd-dentries' ]]; then

            local -i drop_fd_dentries
            drop_fd_dentries="$(</proc/sys/fs/procfs-drop-fd-dentries)"
            logCheckInfo "Linux VFS procfs-drop-fd-dentries kernel tunable available (is: ${drop_fd_dentries})"

        fi

        local dentry_state
        dentry_state="$(</proc/sys/fs/dentry-state)"         # 219620 197420 45 0 0 0
        readonly dentry_state

        local dentry_unused
        [[ "${dentry_state}" =~ ^[0-9]+[[:space:]]+([0-9]+) ]] && dentry_unused=${BASH_REMATCH[1]} # 197420

        if [[ ${dentry_unused} -lt ${dentry_unused_expected} ]]; then

            logCheckOk "Linux VFS dentry-unused value within uncritical range (SAP KBA ${sapnote:-}) (is: ${dentry_unused})"
            _retval=0
        else

            logCheckWarning "Linux VFS dentry-unused value above critical limit (SAP KBA ${sapnote:-}) (is: ${dentry_unused}, should be: <= ${dentry_unused_expected})"
            _retval=1

        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
