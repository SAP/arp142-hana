#!/bin/bash

function check_0300_timer_and_clocksource {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # MODIFICATION SECTION>>
    #local -r _sapnote='#'		#TSC and OS clocksoure

    local reco_clocksource='tsc'
    local -r reco_clocksource_power='timebase'
    local -r reco_clocksource_mshyperv='hyperv_clocksource_tsc_page'
    # MODIFICATION SECTION<<

    # PRECONDITIONS
    if LIB_FUNC_IS_IBMPOWER ; then
        reco_clocksource="${reco_clocksource_power}"
        readonly reco_clocksource

    elif LIB_FUNC_IS_INTEL ; then

        LIB_FUNC_IS_VIRT_MICROSOFT && reco_clocksource="${reco_clocksource_mshyperv}"
        readonly reco_clocksource

    # CHECK - Intel TSC

        local -r IFS=$'\n'
        local -ar tsc_flags=($( (grep -e '^flags' /proc/cpuinfo | uniq | tr ' ' '\n' | grep tsc) ) )

        local tsc_flag
        local -i tsc_flag_tsc
        local -i tsc_flag_constant
        local -i tsc_flag_nonstop

        for tsc_flag in "${tsc_flags[@]}"; do

            case ${tsc_flag} in

                'tsc')          tsc_flag_tsc=0 ;;
                'constant_tsc') tsc_flag_constant=0 ;;
                'nonstop_tsc')  tsc_flag_nonstop=0 ;;

            esac
        done

        if [[ ! ${tsc_flag_tsc:-} ]] ; then
            logCheckError 'Time Stamp Counter flag <tsc> NOT detected'
            _retval=2
        fi

        if [[ ! ${tsc_flag_constant:-} ]] ; then
            logCheckError 'Time Stamp Counter flag <tsc_constant> NOT detected'
            _retval=2
        fi

        if [[ ! ${tsc_flag_nonstop:-} ]] ; then
            logCheckError 'Time Stamp Counter flag <tsc_nonstop> NOT detected'
            _retval=2
        fi

        if [[ ${_retval} -eq 99 ]]; then

            logCheckOk "All Time Stamp Counter flags detected - fast TSC timer active"
            _retval=0
        else
            logCheckError "NOT all Time Stamp Counter flags detected - fallback to slower system clocksource"
            logCheckError "Check indexserver trace files for <Fallback to system call for HR timer> messages"
        fi
    fi

    #e.g. non INTEL or FALLBACK
    if [[ ${_retval} -ne 0 ]]; then

        #kernel clocksource
        local -r curr_clocksource=$(</sys/devices/system/clocksource/clocksource0/current_clocksource)

        if [[ ${_retval} -eq 2 ]]; then

            #fallback
            if [[ "${curr_clocksource}" != "${reco_clocksource}" ]]; then

                logCheckError "Fallback OS clocksource is NOT using fastest timer - (is: ${curr_clocksource}, should be: ${reco_clocksource})"

            else

                logCheckInfo "Fallback OS clocksource is using fastest timer (is: ${curr_clocksource})"

            fi

        else

            #non INTEL
            if [[ "${curr_clocksource}" != "${reco_clocksource}" ]]; then

                logCheckError "OS clocksource is NOT using fast timer - (is: ${curr_clocksource}, should be: ${reco_clocksource})"
                _retval=2

            else

                logCheckOk "OS clocksource is using fast timer (is: ${curr_clocksource})"
                _retval=0

            fi

        fi
    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
