#!/usr/bin/env bash

function check_0010_os_kernel_sles {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    #https://www.suse.com/support/kb/doc/?id=000019587

    # MODIFICATION SECTION>>
    #       array       'rel' 'goodnormalized_kernel'   'SAP Note'
    local -ar _sles_intel=(\
                        '12.4' '4.12.14-95.96.1'        '#2205917'  \
                        '12.5' '4.12.14-122.116.1'      '#2205917'  \

                        '15.0' '4.12.14-150000.150.109.1'   '#2684254'  \
                        '15.1' '4.12.14-150100.197.111.1'   '#2684254'  \
                        '15.2' '5.3.18-24.107.1'            '#3078256'  \
                        '15.3' '5.3.18-150300.59.60.4'      '#2684254,3057472'  \
                        '15.4' '5.14.21-150400.22.1'    '#2684254'  \
                        )

    local -ar _sles_ibmpower=(\
                        '12.4' '4.12.14-95.96.1'        '#2205917'  \
                        '12.5' '4.12.14-122.116.1'      '#2205917'  \

                        '15.0' '4.12.14-150000.150.109.1'   '#2684254'  \
                        '15.1' '4.12.14-150100.197.111.1'   '#2684254'  \
                        '15.2' '5.3.18-24.107.1'            '#3078256'  \
                        '15.3' '5.3.18-150300.59.60.4'      '#2684254'  \
                        '15.4' '5.14.21-150400.22.1'    '#2684254'  \
                        )

    # MODIFICATION SECTION<<

    #2205917 - SAP HANA DB: Recommended OS settings for SLES 12 / SLES for SAP Applications 12
    #2684254 - SAP HANA DB: Recommended OS settings for SLES 15 / SLES for SAP Applications 15

    #3078256 - HANA system is hanging when using the bcache for SAP HANA data disks
    #3057472 - Lenovo Systems Solution for SAP HANA Platform Edition FW/OS/Driver Maintenance (SR650v2)

    local -a _rel_kernel_matrix

    # PRECONDITIONS
    if ! LIB_FUNC_IS_SLES; then

        logCheckSkipped 'Linux distribution is not SLES. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif LIB_FUNC_IS_INTEL; then

        _rel_kernel_matrix+=("${_sles_intel[@]}")

    elif LIB_FUNC_IS_IBMPOWER; then

        _rel_kernel_matrix+=("${_sles_ibmpower[@]}")

    else

        logCheckError "Platform distribution NOT supported (SAP Note #2235581) (is: ${OS_NAME} ${OS_VERSION}) - <${FUNCNAME[0]}>"
        _retval=2

    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local _release
        local _goodversion
        local _sapnote
        local normalized_kernelversion
        local normalized_goodversion

        LIB_FUNC_NORMALIZE_KERNEL "${OS_LEVEL}"
        normalized_kernelversion="${LIB_FUNC_NORMALIZE_KERNEL_RETURN}"

        # i+=3 --> every 3rd item
        for ((i=0; i < ${#_rel_kernel_matrix[@]}; i+=3)); do

            _release="${_rel_kernel_matrix[$i]}"
            logTrace "<${FUNCNAME[0]}> # ${_release}>"

            [[ "${OS_VERSION}" != "${_release}"* ]] && continue #handle kernel with subversions correctly

            _goodversion="${_rel_kernel_matrix[$i+1]}"
            _sapnote="${_rel_kernel_matrix[$i+2]}"

            LIB_FUNC_NORMALIZE_KERNEL "${_goodversion}"
            normalized_goodversion="${LIB_FUNC_NORMALIZE_KERNEL_RETURN}"

            # returns 0 if equal, 1 if first is higher, 2 if second is higher
            LIB_FUNC_COMPARE_VERSIONS "${normalized_kernelversion}" "${normalized_goodversion}"
            if [[ $? -eq 2 ]]; then
                logCheckError 'Check is listing linux kernel version either mentioned in any note or available for >1 year'
                logCheckError "Linux kernel must be upgraded (SAP Note ${_sapnote:-}) (is: ${OS_LEVEL}, should be: >=${_goodversion})"
                _retval=2
            else
                logCheckOk "Linux kernel version is at required level (SAP Note ${_sapnote:-}) (is: ${OS_LEVEL})"
                _retval=0
            fi

            break
        done

        if [[ ${_retval} -eq 99 ]]; then
                logCheckError "SLES version is NOT supported by SAP HANA (SAP Note #2235581) (is: ${OS_VERSION})"
                _retval=2
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
