#!/usr/bin/env bash

function check_0400_glibc_x64 {

    logTrace "<${BASH_SOURCE[0]}:${FUNCNAME[*]}>"

    local -i _retval=99

    # <1y old package or concrete newer version listed in any note
    #https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server&version=12.3&arch=x86_64&query=glibc
    #https://access.redhat.com/downloads/content/glibc/2.34-16.el9/x86_64/fd431d51/package

    # MODIFICATION SECTION>>
    local -ar sles114=( '2.11.3-17.95.2' '#2240716' )
    local -ar sles123=( '2.22-113.4' '#2205917' )
    local -ar sles124=( '2.22-100.27.3' '#2205917' )
    local -ar sles150=( '2.26-13.36.1' '#2684254' )
    local -ar rhel6x=( '2.12-1.212.el6_10.3' '#1496410' )
    local -ar rhel76=( '2.17-260.el7_6.6' '#2292690' )
    local -ar rhel81=( '2.28-72.el8_1.1' '#2777782' )
    # MODIFICATION SECTION<<

    #2240716 - SAP HANA DB: Recommended OS settings for SLES 11
    #2205917 - SAP HANA DB: Recommended OS settings for SLES 12
    #2684254 - SAP HANA DB: Recommended OS settings for SLES 15
    #1496410 - Red Hat Enterprise Linux 6.x: Installation and Upgrade
    #2292690 - SAP HANA DB: Recommended OS settings for RHEL 7
    #2777782 - SAP HANA DB: Recommended OS Settings for RHEL 8

    local _goodversion
    local sapnote

    # PRECONDITIONS
    if ! LIB_FUNC_IS_X64 ; then

        logCheckSkipped 'Not running on x64 CPU. Skipping' "<${FUNCNAME[0]}>"
        _retval=3

    elif LIB_FUNC_IS_SLES ; then

        case "${OS_VERSION}" in

            11.*)           _goodversion="${sles114[0]}" ; sapnote="${sles114[1]}" ;;

            12.3)           _goodversion="${sles123[0]}" ; sapnote="${sles123[1]}" ;;

            12.[4-5]*)      _goodversion="${sles124[0]}" ; sapnote="${sles124[1]}" ;;

            15.*)           _goodversion="${sles150[0]}" ; sapnote="${sles150[1]}" ;;

            *)      logCheckWarning 'CHECK does not support SLES release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                    _retval=1 ;;
        esac

    elif LIB_FUNC_IS_RHEL ; then

        case "${OS_VERSION}" in

            6.10 )          _goodversion="${rhel6x[0]}" ; sapnote="${rhel6x[1]}" ;;

            7.[6-9] )       _goodversion="${rhel76[0]}" ; sapnote="${rhel76[1]}" ;;

            8.[1-6] )       _goodversion="${rhel81[0]}" ; sapnote="${rhel81[1]}" ;;

            *)      logCheckWarning 'CHECK does not support RHEL release.' "(is: ${OS_VERSION}) - <${FUNCNAME[0]}>"
                    _retval=1 ;;
        esac

    else
            logCheckError "Linux distribution NOT supported (SAP Note #2235581) (is: ${OS_NAME} ${OS_VERSION}) - <${FUNCNAME[0]}>"
            _retval=2
    fi

    # CHECK
    if [[ ${_retval} -eq 99 ]]; then

        local normalized_goodversion
        local normalized_fullversion

        local _fullversion
        _fullversion=$(rpm -q --queryformat "%{VERSION}-%{RELEASE}" glibc)

        #normalize good version
        LIB_FUNC_NORMALIZE_RPM "${_goodversion}"
        normalized_goodversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        #normalize full version - e.g. 2.17-157.el7_3.5
        LIB_FUNC_NORMALIZE_RPM "${_fullversion}"
        normalized_fullversion="${LIB_FUNC_NORMALIZE_RPM_RETURN}"

        # returns 0 if equal, 1 if first is higher, 2 if second is higher
        LIB_FUNC_COMPARE_VERSIONS "${normalized_fullversion}" "${normalized_goodversion}"

        if [[ $? -ne 2 ]]; then
            logCheckOk "GLIBC version seems to be ok (SAP Note ${sapnote:-}) (is: ${_fullversion})"
            _retval=0
        else
            logCheckError "GLIBC must be updated (SAP Note ${sapnote:-}) (is: ${_fullversion}, should be: >=${_goodversion})"
            _retval=2
        fi

    fi

    logDebug "<${BASH_SOURCE[0]}:${FUNCNAME[0]}> # RC=${_retval}"
    return ${_retval}

}
