#!/usr/bin/env bash
umask 0027
set -u # treat unset variables as an error

#------------------------------------------------------------------
# SAP HANA OS checks
#------------------------------------------------------------------
# (C) Copyright SAP 2017-2020
# Author: CS IDG - CoE EMEA HANA Platform & Technical Infrastructure

# Script name: "saphana-logger-stubs"
#
# Logging Functions - Stubs for Testing
#------------------------------------------------------------------

# return if saphana-logger-stubs already loaded
[[ -n "${HANA_LOGGER_STUBS:-}" ]] && return 0
HANA_LOGGER_STUBS='stubs'

# prevent loading of original HANA_LOGGER
# shellcheck disable=SC2034
HANA_LOGGER_PROGVERSION='stubs'

logNotify()  { : ; }
logError()  { : ; }
logWarn()  { : ; }
logInfo()  { : ; }
logDebug()  { : ; }
logTrace()  { : ; }

logCheckSkipped()  { : ; }
logCheckInfo()  { : ; }
logCheckOk()  { : ; }
logCheckError()  { : ; }
logCheckWarning()  { : ; }

# logNotify()  { printf "N: %s\n" "$*" ; }
# logError()  { printf "E: %s\n" "$*" ; }
# logWarn()  { printf "W: %s\n" "$*" ; }
# logInfo()  { printf "I: %s\n" "$*" ; }
# logDebug()  { printf "D: %s\n" "$*" ; }
# logTrace()  { printf "T: %s\n" "$*" ; }

# logCheckSkipped()  { printf "ChS: %s\n" "$*" ; }
# logCheckInfo()  { printf "ChI: %s\n" "$*" ; }
# logCheckOk()  { printf "ChO: %s\n" "$*" ; }
# logCheckError()  { printf "ChE: %s\n" "$*" ; }
# logCheckWarning()  { printf "ChW: %s\n" "$*" ; }
